name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize]
    # Optional: Only run on specific file changes
    # paths:
    #   - "src/**/*.ts"
    #   - "src/**/*.tsx"
    #   - "src/**/*.js"
    #   - "src/**/*.jsx"

jobs:
  claude-review:
    # Optional: Filter by PR author
    # if: |
    #   github.event.pull_request.user.login == 'external-contributor' ||
    #   github.event.pull_request.user.login == 'new-developer' ||
    #   github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR'
    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write  # Required for Claude to comment on PRs
      issues: write         # Required for Claude to comment on issues
      id-token: write
      actions: read         # Required for Claude to read CI results
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better diff analysis

      # Setup Node.js with caching for faster builds
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.12.4

      # Cache dependencies and Next.js build cache
      - name: Cache dependencies and Next.js
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        env:
          # Environment variables for GitHub CLI access
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Use GitHub PAT instead of OAuth token
          # Create a PAT with: repo, workflow, write:discussion permissions
          github_token: ${{ secrets.CLAUDE_PAT }}

          # Use Claude Sonnet 4 for government website reviews
          model: "claude-sonnet-4-20250514"
          
          # Enhanced tools for HAPA website analysis
          allowed_tools: |
            Bash(gh pr view ${{ github.event.pull_request.number }} --json *),
            Bash(gh pr diff ${{ github.event.pull_request.number }}),
            Bash(gh pr checks ${{ github.event.pull_request.number }}),
            Bash(gh api repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files),
            Bash(pnpm lint),
            Bash(pnpm typecheck),
            Bash(pnpm generate:types),
            Bash(git diff main...HEAD),
            Bash(git log --oneline main...HEAD)
          
          # HAPA Government Website Comprehensive Review
          direct_prompt: |
            üèõÔ∏è **HAPA Government Website PR Review** 
            
            You are reviewing PR #${{ github.event.pull_request.number }} for the official Mauritania government media regulatory authority website.
            
            **Essential Analysis Steps:**
            1. Get PR overview: `gh pr view ${{ github.event.pull_request.number }} --json title,body,files,additions,deletions`
            2. Analyze changes: `gh pr diff ${{ github.event.pull_request.number }}`
            3. Check CI status: `gh pr checks ${{ github.event.pull_request.number }}`
            4. Run quality checks: `pnpm lint && pnpm typecheck`
            
            **Government Website Requirements:**
            
            üåê **Internationalization (Critical)**
            - Verify French (fr) and Arabic (ar) translations in `messages/` directory
            - Check RTL layout support for Arabic content
            - Ensure proper locale routing and direction handling
            - Validate `Link` imports from `@/i18n/navigation` (NOT `next/link`)
            
            üèóÔ∏è **Payload CMS Compliance**
            - Check if schema changes require `pnpm generate:types`
            - Verify admin components need `pnpm payload generate:importmap`
            - Validate collection localization configuration
            - Ensure blocks are registered in `RenderBlocks.tsx`
            
            üîí **Government Security & Compliance**
            - Scan for security vulnerabilities and data exposure
            - Verify WCAG 2.1 AA accessibility compliance
            - Check for proper error handling and validation
            - Ensure no sensitive government data in logs/comments
            
            ‚ö° **Performance & Optimization**
            - Validate Next.js 15 App Router best practices
            - Check Core Web Vitals impact
            - Verify proper caching and optimization
            - Review bundle size implications
            
            üß™ **Code Quality**
            - TypeScript type safety and proper interfaces
            - Component patterns and architecture
            - Error boundaries and fallback handling
            - Consistent coding standards
            
            **Review Format:**
            ## üîç PR Analysis Summary
            - **Changes**: Brief overview of modifications
            - **Impact**: Government website impact assessment
            
            ## ‚úÖ Compliance Status
            - **Internationalization**: ‚úÖ/‚ö†Ô∏è/‚ùå Status with details
            - **Security**: ‚úÖ/‚ö†Ô∏è/‚ùå Government compliance check
            - **Accessibility**: ‚úÖ/‚ö†Ô∏è/‚ùå WCAG 2.1 AA compliance
            - **Performance**: ‚úÖ/‚ö†Ô∏è/‚ùå Core Web Vitals impact
            
            ## üí° Recommendations
            - Specific actionable improvements
            - Government website specific suggestions
            
            ## üö® Critical Issues (if any)
            - Security vulnerabilities
            - Accessibility violations
            - Internationalization problems
            
            Be thorough but constructive. Focus on government website standards and user experience for French/Arabic speakers.

          # Optional: Use sticky comments to make Claude reuse the same comment on subsequent pushes to the same PR
          # use_sticky_comment: true
          
          # Optional: Customize review based on file types
          # direct_prompt: |
          #   Review this PR focusing on:
          #   - For TypeScript files: Type safety and proper interface usage
          #   - For API endpoints: Security, input validation, and error handling
          #   - For React components: Performance, accessibility, and best practices
          #   - For tests: Coverage, edge cases, and test quality
          
          # Optional: Different prompts for different authors
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' && 
          #   'Welcome! Please review this PR from a first-time contributor. Be encouraging and provide detailed explanations for any suggestions.' ||
          #   'Please provide a thorough code review focusing on our coding standards and best practices.' }}
          
          # Optional: Add specific tools for running tests or linting
          # allowed_tools: "Bash(npm run test),Bash(npm run lint),Bash(npm run typecheck)"
          
          # Optional: Skip review for certain conditions
          # if: |
          #   !contains(github.event.pull_request.title, '[skip-review]') &&
          #   !contains(github.event.pull_request.title, '[WIP]')

