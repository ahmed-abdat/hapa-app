/**
 * WCAG 2.3.3 Compliance: Unified Motion Preferences System
 * 
 * This CSS provides comprehensive accessibility support for:
 * - Frontend components (with Tailwind fallback)
 * - Payload CMS admin components (no Tailwind available)
 * - Third-party components and legacy code
 * - Framer Motion components
 * 
 * Design Principle: Consistent motion reduction across all contexts
 */

@media (prefers-reduced-motion: reduce) {
  /* === GLOBAL RESET === */
  /* Ensure all animations respect motion preferences */
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }

  /* === FRONTEND COMPONENTS (Tailwind CSS) === */
  /* Tailwind animation classes */
  .animate-spin,
  .animate-pulse,
  .animate-bounce,
  .animate-ping,
  .animate-fade,
  [class*="animate-"] {
    animation: none !important;
  }

  /* Tailwind transition classes */
  [class*="transition-"],
  [class*="duration-"],
  [class*="ease-"] {
    transition: none !important;
  }

  /* === PAYLOAD ADMIN COMPONENTS === */
  /* Admin-specific selectors */
  .payload-admin *,
  [class*="admin-"],
  [class*="payload-"],
  .dashboard-component,
  .form-component {
    animation: none !important;
    transition: none !important;
  }

  /* === FRAMER MOTION COMPONENTS === */
  /* Framer Motion respects useReducedMotion, but this is a fallback */
  [data-framer-component],
  .framer-motion-component {
    animation: none !important;
    transition: none !important;
  }

  /* === FORM & UI COMPONENTS === */
  /* Common interactive elements */
  button,
  .button,
  .btn {
    transition: background-color 0.01ms, color 0.01ms !important;
    transform: none !important;
  }

  button:hover,
  .button:hover,
  .btn:hover {
    transform: none !important;
    scale: 1 !important;
  }

  /* Form elements */
  input,
  textarea,
  select,
  .form-control {
    transition: border-color 0.01ms, box-shadow 0.01ms !important;
  }

  /* Modal and overlay transitions */
  .modal,
  .overlay,
  .backdrop,
  [role="dialog"] {
    transition: opacity 0.01ms !important;
  }

  /* Progress bars and loading indicators */
  .progress,
  .loading,
  .spinner {
    animation: none !important;
  }

  /* === ACCESSIBILITY ENHANCEMENTS === */
  /* Disable video autoplay for motion sensitivity */
  video[autoplay] {
    animation-play-state: paused !important;
  }

  /* Disable parallax effects */
  .parallax,
  [class*="parallax"] {
    transform: none !important;
  }

  /* Simplify hover effects */
  [class*="hover:scale-"],
  [class*="hover:rotate-"],
  [class*="hover:translate-"] {
    transform: none !important;
  }

  /* === MOTION-SAFE CLASSES === */
  /* For components that should only animate when motion is safe */
  .motion-safe-only {
    display: none !important;
  }

  .motion-reduce-alternative {
    display: block !important;
  }
}

/* === MOTION-SAFE DEFAULTS === */
/* For components that respect motion preferences by default */
@media (prefers-reduced-motion: no-preference) {
  .motion-safe-only {
    display: block;
  }

  .motion-reduce-alternative {
    display: none;
  }
}

/* === UTILITY CLASSES === */
/* Classes for developers to use in components */
.motion-safe-animate {
  animation-play-state: running;
}

@media (prefers-reduced-motion: reduce) {
  .motion-safe-animate {
    animation-play-state: paused !important;
    animation: none !important;
  }
}

/* For components that need different behavior based on motion preference */
.motion-reduce-simplified {
  /* Default state - will be overridden if motion is safe */
}

@media (prefers-reduced-motion: no-preference) {
  .motion-reduce-simplified {
    /* Enhanced animations when motion is safe */
    transition: all 0.3s ease;
  }
}

@media (prefers-reduced-motion: reduce) {
  .motion-reduce-simplified {
    /* Simplified state when motion is reduced */
    transition: none !important;
    animation: none !important;
  }
}