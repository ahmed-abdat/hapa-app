/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    posts: Post;
    media: Media;
    categories: Category;
    'dashboard-submissions': DashboardSubmission;
    'media-content-submissions': MediaContentSubmission;
    'media-cleanup-jobs': MediaCleanupJob;
    users: User;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    'dashboard-submissions': DashboardSubmissionsSelect<false> | DashboardSubmissionsSelect<true>;
    'media-content-submissions': MediaContentSubmissionsSelect<false> | MediaContentSubmissionsSelect<true>;
    'media-cleanup-jobs': MediaCleanupJobsSelect<false> | MediaCleanupJobsSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: 'fr' | 'ar';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  heroImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (number | Post)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    /**
     * Ceci devrait contenir entre 120 et 160 caractères. Pour obtenir de l'aide pour rédiger des descriptions meta de qualité, consultez les bonnes pratiques.
     */
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * Fichiers média pour les contenus éditoriaux. Les pièces jointes des formulaires sont automatiquement filtrées de cette vue.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  prefix?: string | null;
  source?: ('admin' | 'form') | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {};
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (number | null) | Category;
  breadcrumbs?:
    | {
        doc?: (number | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  /**
   * Image de profil qui sera affichée dans l'en-tête d'administration
   */
  avatar?: (number | null) | Media;
  role: 'admin' | 'editor' | 'user';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * Accéder au tableau de bord des soumissions médiatiques avec statistiques et gestion avancée
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "dashboard-submissions".
 */
export interface DashboardSubmission {
  id: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * Gérer les signalements et plaintes de contenu médiatique soumis via les formulaires du site. Visualiser les fichiers médias, suivre le statut et gérer les soumissions.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media-content-submissions".
 */
export interface MediaContentSubmission {
  id: number;
  title?: string | null;
  formType: 'report' | 'complaint';
  submittedAt: string;
  locale: 'fr' | 'ar';
  submissionStatus: 'pending' | 'reviewing' | 'resolved' | 'dismissed';
  priority?: ('low' | 'medium' | 'high' | 'urgent') | null;
  /**
   * Contact and identification details of the person filing this complaint
   */
  complainantInfo?: {
    fullName?: string | null;
    gender?: string | null;
    country?: string | null;
    emailAddress?: string | null;
    phoneNumber?: string | null;
    whatsappNumber?: string | null;
    profession?: string | null;
    relationshipToContent?: string | null;
  };
  /**
   * Le type de média où le contenu a été trouvé (TV, Radio, Site web, etc.)
   */
  mediaType?: string | null;
  /**
   * Specific TV channel or radio station
   */
  specificChannel?: string | null;
  programName?: string | null;
  /**
   * Complete details about the media content that was reported or complained about
   */
  contentInfo?: {
    /**
     * Type of media (TV, Radio, Website, etc.)
     */
    mediaType?: string | null;
    mediaTypeOther?: string | null;
    /**
     * Specific channel or station name
     */
    specificChannel?: string | null;
    programName?: string | null;
    broadcastDateTime?: string | null;
    linkScreenshot?: string | null;
    /**
     * Captures d'écran et images fournies comme preuves. Interface épurée sans URLs techniques.
     */
    screenshotFiles?:
      | {
          url?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  reasons?:
    | {
        reason?: string | null;
        id?: string | null;
      }[]
    | null;
  reasonOther?: string | null;
  description?: string | null;
  attachmentTypes?:
    | {
        type?: string | null;
        id?: string | null;
      }[]
    | null;
  attachmentOther?: string | null;
  /**
   * Fichiers de preuve supplémentaires (vidéos, audio, documents). Interface épurée sans URLs techniques.
   */
  attachmentFiles?:
    | {
        url?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Internal notes for tracking and follow-up
   */
  adminNotes?: string | null;
  resolution?: {
    resolvedAt?: string | null;
    resolvedBy?: string | null;
    resolutionNotes?: string | null;
    actionTaken?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * Suivre et gérer les opérations de nettoyage des fichiers média orphelins
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media-cleanup-jobs".
 */
export interface MediaCleanupJob {
  id: number;
  /**
   * Type d'opération de nettoyage effectuée
   */
  jobType: 'verification' | 'cleanup' | 'audit';
  status: 'pending' | 'running' | 'completed' | 'failed' | 'partial';
  /**
   * Quand la tâche a été démarrée
   */
  executedAt?: string | null;
  /**
   * Quand la tâche a été terminée
   */
  completedAt?: string | null;
  metrics?: {
    /**
     * Nombre total de fichiers scannés dans R2
     */
    filesScanned?: number | null;
    /**
     * Nombre de fichiers traités
     */
    filesProcessed?: number | null;
    /**
     * Nombre de fichiers orphelins identifiés
     */
    orphanedFilesFound?: number | null;
    /**
     * Nombre de fichiers supprimés avec succès
     */
    filesDeleted?: number | null;
    /**
     * Nombre de fichiers qui ont échoué à la suppression
     */
    deletionErrors?: number | null;
    /**
     * Espace de stockage récupéré en octets
     */
    storageReclaimed?: number | null;
  };
  /**
   * Liste des fichiers orphelins trouvés pendant le scan
   */
  orphanedFiles?:
    | {
        filename: string;
        path: string;
        size?: number | null;
        lastModified?: string | null;
        status?: ('found' | 'deleted' | 'failed' | 'skipped') | null;
        /**
         * Message d'erreur si la suppression a échoué
         */
        error?: string | null;
        id?: string | null;
      }[]
    | null;
  configuration?: {
    /**
     * Si vrai, scanne et rapporte seulement sans supprimer
     */
    dryRun?: boolean | null;
    /**
     * Répertoires R2 à scanner (par défaut: forms/)
     */
    includeDirectories?:
      | {
          path: string;
          id?: string | null;
        }[]
      | null;
    /**
     * Motifs de fichiers à exclure du nettoyage
     */
    excludePatterns?:
      | {
          pattern: string;
          id?: string | null;
        }[]
      | null;
    /**
     * Maximum de fichiers à traiter dans une tâche
     */
    maxFilesToProcess?: number | null;
    /**
     * Garder les fichiers plus récents que ce nombre de jours
     */
    retentionDays?: number | null;
  };
  /**
   * Journal détaillé de l'opération de nettoyage
   */
  executionLog?: string | null;
  /**
   * Messages d'erreur rencontrés pendant l'exécution
   */
  errorLog?: string | null;
  triggeredBy?: ('manual' | 'scheduled' | 'api') | null;
  /**
   * Utilisateur qui a déclenché la tâche (pour les tâches manuelles)
   */
  executedBy?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * Collection automatique pour l'indexation des contenus. Mise à jour lors de la création/modification d'articles. Utilisée par le moteur de recherche du site.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: number | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        categoryID?: string | null;
        title?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'dashboard-submissions';
        value: number | DashboardSubmission;
      } | null)
    | ({
        relationTo: 'media-content-submissions';
        value: number | MediaContentSubmission;
      } | null)
    | ({
        relationTo: 'media-cleanup-jobs';
        value: number | MediaCleanupJob;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  prefix?: T;
  source?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?: T | {};
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "dashboard-submissions_select".
 */
export interface DashboardSubmissionsSelect<T extends boolean = true> {
  id?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media-content-submissions_select".
 */
export interface MediaContentSubmissionsSelect<T extends boolean = true> {
  title?: T;
  formType?: T;
  submittedAt?: T;
  locale?: T;
  submissionStatus?: T;
  priority?: T;
  complainantInfo?:
    | T
    | {
        fullName?: T;
        gender?: T;
        country?: T;
        emailAddress?: T;
        phoneNumber?: T;
        whatsappNumber?: T;
        profession?: T;
        relationshipToContent?: T;
      };
  mediaType?: T;
  specificChannel?: T;
  programName?: T;
  contentInfo?:
    | T
    | {
        mediaType?: T;
        mediaTypeOther?: T;
        specificChannel?: T;
        programName?: T;
        broadcastDateTime?: T;
        linkScreenshot?: T;
        screenshotFiles?:
          | T
          | {
              url?: T;
              id?: T;
            };
      };
  reasons?:
    | T
    | {
        reason?: T;
        id?: T;
      };
  reasonOther?: T;
  description?: T;
  attachmentTypes?:
    | T
    | {
        type?: T;
        id?: T;
      };
  attachmentOther?: T;
  attachmentFiles?:
    | T
    | {
        url?: T;
        id?: T;
      };
  adminNotes?: T;
  resolution?:
    | T
    | {
        resolvedAt?: T;
        resolvedBy?: T;
        resolutionNotes?: T;
        actionTaken?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media-cleanup-jobs_select".
 */
export interface MediaCleanupJobsSelect<T extends boolean = true> {
  jobType?: T;
  status?: T;
  executedAt?: T;
  completedAt?: T;
  metrics?:
    | T
    | {
        filesScanned?: T;
        filesProcessed?: T;
        orphanedFilesFound?: T;
        filesDeleted?: T;
        deletionErrors?: T;
        storageReclaimed?: T;
      };
  orphanedFiles?:
    | T
    | {
        filename?: T;
        path?: T;
        size?: T;
        lastModified?: T;
        status?: T;
        error?: T;
        id?: T;
      };
  configuration?:
    | T
    | {
        dryRun?: T;
        includeDirectories?:
          | T
          | {
              path?: T;
              id?: T;
            };
        excludePatterns?:
          | T
          | {
              pattern?: T;
              id?: T;
            };
        maxFilesToProcess?: T;
        retentionDays?: T;
      };
  executionLog?: T;
  errorLog?: T;
  triggeredBy?: T;
  executedBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  avatar?: T;
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        categoryID?: T;
        title?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?: {
      relationTo: 'posts';
      value: number | Post;
    } | null;
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "GalleryBlock".
 */
export interface GalleryBlock {
  /**
   * Titre optionnel pour la galerie
   */
  title?: string | null;
  /**
   * Description optionnelle pour la galerie
   */
  description?: string | null;
  /**
   * Ajoutez plusieurs images pour créer une galerie (glissez-déposez pour réorganiser)
   */
  images?:
    | {
        /**
         * Sélectionner une image pour la galerie
         */
        media: number | Media;
        caption?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Permettre l'agrandissement des images en cliquant
   */
  enableLightbox?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'gallery';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "YouTubeVideoBlock".
 */
export interface YouTubeVideoBlock {
  /**
   * Collez l'URL de votre vidéo YouTube ici
   */
  videoUrl: string;
  /**
   * Laissez vide pour utiliser le titre original de la vidéo
   */
  title?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'youtubeVideo';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}